#!/bin/bash

# Only remove notifyBuffer if we have issued a jend? That way we can
# reuse the last settings we entered?
rm /tmp/notifyBuffer.txt &> /dev/null
echo "now + 15 minutes" > /tmp/notifyBuffer.txt
echo "Title: Task notifier" >> /tmp/notifyBuffer.txt
echo "Task: me" >> /tmp/notifyBuffer.txt
echo "Final Action: End task" >> /tmp/notifyBuffer.txt
echo "" >> /tmp/notifyBuffer.txt
vim /tmp/notifyBuffer.txt

AT_TIME=`head -1 /tmp/notifyBuffer.txt`
# Explanation of sed code below
# First, delete everything but the second line.
# Then remove 'Title: ' from the second line.
TITLE=`sed -e '2!d' -e 's/Title\:\s*//g' /tmp/notifyBuffer.txt`
# Sed code same as above, just modified for the task.
TASK=`sed -e '3!d' -e 's/Task\:\s*//g' /tmp/notifyBuffer.txt`
END_ACTION=`sed -e '4!d' -e 's/Final Action\:\s*//g' /tmp/notifyBuffer.txt`
# Fifth line is the message.
MESSAGE=`sed '5!d' /tmp/notifyBuffer.txt`

# Stop current timetrap task and checkin with the new task.
t out
t sheet $TASK
t in $MESSAGE

# Setup at command to issue another command at some time in the future (the
# notify and text).
echo "jnotifyandtxt \"$TITLE\" \"$MESSAGE\" \"$END_ACTION\"" > /tmp/tmpBuff
AT_COMMAND='at -f /tmp/tmpBuff -m "$AT_TIME"'
sudo -u jhughes at -f /tmp/tmpBuff -m $AT_TIME
