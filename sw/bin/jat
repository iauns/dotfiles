#!/bin/bash

# Only remove notifyBuffer if we have issued a jend? That way we can
# reuse the last settings we entered?
rm /tmp/notifyBuffer.txt &> /dev/null
echo "now + 15 minutes" > /tmp/notifyBuffer.txt
echo "Title: (title here)" >> /tmp/notifyBuffer.txt
echo "Task: me" >> /tmp/notifyBuffer.txt
echo "Final Action: End task" >> /tmp/notifyBuffer.txt
echo "" >> /tmp/notifyBuffer.txt
vim /tmp/notifyBuffer.txt

AT_TIME=`head -1 /tmp/notifyBuffer.txt`
# Explanation of sed code below
# First, delete everything but the second line.
# Then remove 'Title: ' from the second line.
TITLE=`sed -e '2!d' -e 's/Title\:\s*//g' /tmp/notifyBuffer.txt`
# Sed code same as above, just modified for the task.
TASK=`sed -e '3!d' -e 's/Task\:\s*//g' /tmp/notifyBuffer.txt`
END_ACTION=`sed -e '4!d' -e 's/Final Action\: \s*//g' -e 's/\n/ /g' /tmp/notifyBuffer.txt`
# Fifth line is the message.
MESSAGE=`sed '5!d' /tmp/notifyBuffer.txt`

# Remove last jat command, if any.
if [ -e "/tmp/lastJat" ]; then
  at -r $(cat /tmp/lastJat)
  rm /tmp/lastJat
fi

# Stop current timetrap task and checkin with the new task.
timetrap out
timetrap sheet $TASK
timetrap in $TITLE $MESSAGE

# Setup at command to issue another command at some time in the future (the
# notify and text).
echo "jnotifyandtxt \"$TITLE\" \"$MESSAGE\" \"$END_ACTION\"" > /tmp/tmpBuff
AT_COMMAND='at -f /tmp/tmpBuff -m "$AT_TIME"'
sudo -u jhughes at -f /tmp/tmpBuff -m $AT_TIME 2>&1 | tail -1 | cut -f2 -d" " | sponge /tmp/lastJat
